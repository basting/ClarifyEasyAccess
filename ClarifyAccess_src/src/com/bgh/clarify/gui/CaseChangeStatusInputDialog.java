/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.bgh.clarify.gui;

import com.bgh.clarify.db.ClarifyDatabaseQueryHelper;
import com.bgh.clarify.dt.CaseChangeStatusDt;
import com.bgh.clarify.gui.util.CaseChangeStatusTableModel;
import com.bgh.clarify.gui.util.ComboboxCellEditor;
import java.util.ArrayList;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumn;

/**
 *
 * @author BASTING
 */
public class CaseChangeStatusInputDialog extends javax.swing.JDialog {
    
    private ArrayList<CaseChangeStatusDt> caseTypes;

    private ClarifyDatabaseQueryHelper queryhelper;
    
    private final int CASE_CHANGE_STATUS_COLUMNS_COUNT = 3;
    
    private final String PLEASE_SPECIFY = "Please Specify";
    
    private MainFrame parentFrame;
    
    private ArrayList<CaseChangeStatusDt> getCaseTypes() {
        return caseTypes;
    }

    private void setCaseTypes(ArrayList<CaseChangeStatusDt> caseTypes) {
        this.caseTypes = caseTypes;
    }
    
    /**
     * Creates new form CaseChangeInputDialog
     */
    public CaseChangeStatusInputDialog(MainFrame parent, boolean modal, 
            ArrayList<CaseChangeStatusDt> selectedCaseTypes, 
                    ClarifyDatabaseQueryHelper queryhelperInput, String userName) {
        super(parent, modal);
        parentFrame = (MainFrame)parent;
        initComponents();
        initCustomComponents();
        setCaseTypes(selectedCaseTypes);
        this.queryhelper = queryhelperInput;
        loadCaseStatusDataForUpdate(userName);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlMain = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCaseChangeStatus = new javax.swing.JTable();
        pnlButtons = new javax.swing.JPanel();
        btnChangeStatus = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Change Status for all selected Cases");

        pnlMain.setLayout(new java.awt.BorderLayout());

        tblCaseChangeStatus.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Case Type", "Current Status", "New Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblCaseChangeStatus);

        pnlMain.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        btnChangeStatus.setText("Change All Statuses");
        btnChangeStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChangeStatusActionPerformed(evt);
            }
        });

        btnCancel.setText("Cancel and Return");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlButtonsLayout = new javax.swing.GroupLayout(pnlButtons);
        pnlButtons.setLayout(pnlButtonsLayout);
        pnlButtonsLayout.setHorizontalGroup(
            pnlButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlButtonsLayout.createSequentialGroup()
                .addContainerGap(216, Short.MAX_VALUE)
                .addComponent(btnChangeStatus)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnCancel)
                .addGap(8, 8, 8))
        );

        pnlButtonsLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnCancel, btnChangeStatus});

        pnlButtonsLayout.setVerticalGroup(
            pnlButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlButtonsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancel)
                    .addComponent(btnChangeStatus))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlMain.add(pnlButtons, java.awt.BorderLayout.SOUTH);

        getContentPane().add(pnlMain, java.awt.BorderLayout.CENTER);

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-500)/2, (screenSize.height-201)/2, 500, 201);
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        parentFrame.setInputDoneForChangeStatus(false);
        this.dispose();
    }//GEN-LAST:event_btnCancelActionPerformed

    private boolean performDataMandatoryCheck(Vector<Object> caseChangeStatusDataVector) {
        int size = caseChangeStatusDataVector.size();
        
        for (int i = 0; i < size; i++) {
            Vector currRow = (Vector)caseChangeStatusDataVector.get(i);
            
            String newStatus = (String)currRow.get(2);
                        
            if(newStatus == null || PLEASE_SPECIFY.equalsIgnoreCase(newStatus)){
                return false;
            }            
        }        
        return true;
    }
    
    private void btnChangeStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChangeStatusActionPerformed
        //tblCaseChangeStatus.getModel();
        
        CaseChangeStatusTableModel tableModel = (CaseChangeStatusTableModel)tblCaseChangeStatus.getModel();
        Vector<Object> caseChangeStatusDataVector = tableModel.getDataVector();
        
        boolean allMandatoryPopulated = performDataMandatoryCheck(caseChangeStatusDataVector);
        
        if(allMandatoryPopulated){
            parentFrame.setSelectedDataForStatusChange(caseChangeStatusDataVector);
            parentFrame.setInputDoneForChangeStatus(true);
            this.dispose();
        }else{
            JOptionPane.showMessageDialog(this, "Please fill all mandatory fields and try again. 'Please Specify' is not valid for new Status.");            
        }
    }//GEN-LAST:event_btnChangeStatusActionPerformed

    /**
     * @param args the command line arguments
     */
    //public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
       /* try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CaseChangeStatusInputDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CaseChangeStatusInputDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CaseChangeStatusInputDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CaseChangeStatusInputDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }*/
        //</editor-fold>

        /*
         * Create and display the dialog
         */
       /* java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                CaseChangeStatusInputDialog dialog = new CaseChangeStatusInputDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }*/
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnChangeStatus;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel pnlButtons;
    private javax.swing.JPanel pnlMain;
    private javax.swing.JTable tblCaseChangeStatus;
    // End of variables declaration//GEN-END:variables

    private Object[][] convertArrayListToObjectArr(ArrayList<CaseChangeStatusDt> eligibleCaseTypesWithValidNextStatusValues) {
        int size = eligibleCaseTypesWithValidNextStatusValues.size();
        Object [][] caseListArr = new Object[size][CASE_CHANGE_STATUS_COLUMNS_COUNT];

        int j=0;

        for(int i=0;i<size;i++){
                CaseChangeStatusDt changeStatusDt = eligibleCaseTypesWithValidNextStatusValues.get(i);
                caseListArr[i][j]= changeStatusDt.getCaseType();
                j++;
                caseListArr[i][j]= changeStatusDt.getCurrentStatus();
                j++;
                //ArrayList<CaseSingleStatusDt> newStatusList = changeStatusDt.getNewStatusList();
                caseListArr[i][j] = PLEASE_SPECIFY;
                j=0;
        }

        return caseListArr;
    }
    
    /*private void getValuesForDropDown(){
        JComboBox comboBox = new JComboBox();
        comboBox.addItem("Snowboarding");
        comboBox.addItem("Rowing");
        comboBox.addItem("Chasing toddlers");
        comboBox.addItem("Speed reading");
        comboBox.addItem("Teaching high school");
        comboBox.addItem("None");
        newStatusColumn.setCellEditor(new DefaultCellEditor(comboBox));
    }*/
    
    private void loadCaseStatusDataForUpdate(String userName) {
        ArrayList<CaseChangeStatusDt> eligibleCaseTypes = getCaseTypes();
        
        ArrayList<CaseChangeStatusDt> eligibleCaseTypesWithValidNextStatusValues = queryhelper.getCaseTypesWithValidNextStatusValues(eligibleCaseTypes,userName);
        
        Object [][] eligibleCaseTypesArr = convertArrayListToObjectArr(eligibleCaseTypesWithValidNextStatusValues);
        
        String [] caseChangeStatusHeaders = getCaseChangeStatusHeaders();
        
        CaseChangeStatusTableModel caseChangeStatusResultsTableModel = new CaseChangeStatusTableModel(eligibleCaseTypesArr,caseChangeStatusHeaders);
        tblCaseChangeStatus.setModel(caseChangeStatusResultsTableModel);
                
        TableColumn newStatusColumn = tblCaseChangeStatus.getColumnModel().getColumn(2);  
        
        newStatusColumn.setCellEditor(new ComboboxCellEditor(eligibleCaseTypesWithValidNextStatusValues));
        
        parentFrame.setMasterDataForStatusChange(eligibleCaseTypesWithValidNextStatusValues);
        
        //impactStartDtColumn.setCellEditor(new DateCellEditor()); 
        //impactStartDtColumn.setCellRenderer(new DateCellRenderer());
        
        //impactEndDtColumn.setCellEditor(new DateCellEditor()); 
        //impactEndDtColumn.setCellRenderer(new DateCellRenderer());
        
        JTableHeader header = tblCaseChangeStatus.getTableHeader();
        header.setReorderingAllowed(false);
    }
    
    private String[] getCaseChangeStatusHeaders() {
		return new String [] {
                    "Case Type", "Current Status", "New Status"};
    }
    
     private void initCustomComponents() {
        tblCaseChangeStatus.putClientProperty("terminateEditOnFocusLost", Boolean.TRUE);
    }
    
}
